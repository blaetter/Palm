{"version":3,"sources":["webpack:///./source-bundle/styleguide/styleguide.scss","webpack:///./source-bundle/styleguide/source-bundle/styleguide/styleguide.scss","webpack:///./source-bundle/styleguide/source-bundle/scss/00-global/01-settings.scss","webpack:///./source-bundle/styleguide/source-bundle/scss/00-global/02-mixins.scss"],"names":[],"mappings":"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","file":"styleguide.css","sourcesContent":["@charset \"UTF-8\";\n/*\n *   Styleguide styles. \n *   Do not use these classes in production\n */\n/***************************************************\n * OUR PAGE SETTINGS\n */\n/* We can use a wrapperclass to make unique rules and\n * avoid conflicts with existing older css classes.\n *\n *   <div class=\"our-namespace-to-isolate-the-rules\">\n *       <div class=\"teaser\">\n *           [...]\n *       </div>\n *   </div>\n */\n/***************************************************\n *\n *  some little prÃ¤fix mixins\n *\n */\n/***************************************************\n *\n *  px to rem functions\n *\n */\n/**\n * get any css-rule with rem and px from px\n */\n/***************************************************\n * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php\n * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing\n * over and over in your markup.\n */\n.clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both; }\n\n/***************************************************\n *\n *  Headings\n *\n */\n/***************************************************\n *\n *  Source / Copyright\n *\n */\n/***************************************************\n *\n *  List mixins\n *\n */\n/***************************************************\n * A simple mixin to quickly generate whole media queries from the aliases and\n * conditions defined in `_settings.responsive.scss`.\n *\n * Usage:\n *\n * .foo {\n *     color: green;\n *\n *     @include media-query(palm) {\n *         color: red;\n *     }\n *\n * }\n */\n/***************************************************\n *\n *   FORM\n *\n */\n/***************************************************\n *\n *   BUTTON\n *\n */\n/*\n * Twitter Follow Button\n *\n **/\n/***************************************************\n *\n *   Links\n *\n */\n/***************************************************\n *\n *   Icons\n *\n */\n/***************************************************\n *\n *   Widget\n *\n */\npre code {\n  background-color: #FAFCBA;\n  display: block;\n  padding: 1em;\n  margin: 0 0 2em 0;\n  width: 100%;\n  overflow-x: scroll;\n  overflow-x: auto;\n  font-size: 12px; }\n  pre code > * {\n    max-width: 100%; }\n\n.sg-collapse {\n  background-color: #FAFCBA;\n  margin-bottom: 3em; }\n  .sg-collapse code {\n    margin: 0; }\n\nform + .sg-collapse {\n  margin-top: -1.25rem; }\n\n.sg-code-inline {\n  display: inline;\n  margin: 0;\n  vertical-align: top;\n  background-color: #f7f7f9;\n  color: #bd4147;\n  font-size: 12px;\n  padding: 0rem 0.4rem;\n  font-family: monospace;\n  display: inline-block;\n  width: auto;\n  margin: 0; }\n\n.sg-tabs-list {\n  list-style: none;\n  padding: 0; }\n\n.sg-boxeditems ul {\n  overflow: hidden;\n  list-style: none;\n  list-item-style: none; }\n  .sg-boxeditems ul h4 {\n    margin-top: 0; }\n  .sg-boxeditems ul > li {\n    border: 1px solid #dddddd;\n    margin: 0 0.2em 0.2em 0;\n    overflow: hidden;\n    padding: 0.3em 1.3em;\n    float: left;\n    width: 14em;\n    text-align: center; }\n    .sg-boxeditems ul > li::before {\n      display: none; }\n\n.sg-boxeditems .sg-swatch {\n  display: block;\n  height: 5em;\n  text-align: center; }\n  .sg-boxeditems .sg-swatch .fa-icon {\n    vertical-align: middle;\n    text-align: center; }\n    .sg-boxeditems .sg-swatch .fa-icon::after {\n      display: inline-block;\n      content: \"\";\n      height: 100%;\n      vertical-align: middle; }\n\n.sg-boxeditems .sg-label {\n  text-align: center;\n  display: block; }\n  .sg-boxeditems .sg-label::after {\n    display: block; }\n\n.styelguide-colors .sg-label {\n  text-align: center;\n  display: block; }\n  .styelguide-colors .sg-label::after {\n    display: block; }\n\n.styelguide-colors .sg-color-white {\n  background-color: #FFFFFF; }\n\n.styelguide-colors .sg-color-black {\n  background-color: #000000; }\n\n.styelguide-colors .sg-color-grey {\n  background-color: #f2f2f2; }\n\n.styelguide-colors .sg-color-red {\n  background-color: #E71835; }\n\n.styelguide-colors .sg-color-blue {\n  background-color: #086D9A; }\n\n.styelguide-colors .sg-color-greyDark {\n  background-color: #e3e3e3; }\n\n.styelguide-colors .sg-color-greysource {\n  background-color: #777777; }\n\n.styelguide-colors .sg-color-lightestTextGrey {\n  background-color: #777777; }\n  .styelguide-colors .sg-color-lightestTextGrey::after {\n    content: \" \" !important; }\n\n.styelguide-colors .sg-color-greyBorder {\n  background-color: #CCCCCC; }\n  .styelguide-colors .sg-color-greyBorder::after {\n    content: \" \" !important; }\n\n.styleguide .sg-def-p {\n  display: block; }\n\n.styleguide .sg-def-pb {\n  display: block; }\n\n.styleguide .sg-def-a {\n  display: block; }\n\n.styleguide .sg-def-source {\n  display: block; }\n\n.styleguide .sg-def-sourceDesk {\n  display: block; }\n  .styleguide .sg-def-sourceDesk::after {\n    content: \"font: normal 12px/1.2 droid-sans, Arial, sans-serif; color: #e0e0e0\"; }\n\n.styleguide .sg-color-greyBorder::after {\n  content: \"#CCCCCC\"; }\n\n.styleguide .sg-color-lightestTextGrey::after {\n  content: \"#777777\"; }\n\n.styleguide label {\n  font-weight: bold; }\n\n.styleguide-grids .grid__item > *:not([class*=grid]) {\n  min-height: 60px;\n  box-shadow: 0 0 1px inset;\n  display: block;\n  margin-bottom: 1.25rem; }\n\n.styleguide-heading-section {\n  border-bottom: 5px solid #CCCCCC;\n  margin-top: 0;\n  margin-bottom: 0.6rem;\n  padding-bottom: 0.2rem;\n  margin-top: 3em;\n  margin-bottom: 2em;\n  color: #000000; }\n\n.sg-layout-html {\n  width: 100%;\n  border: 1px solid #000000;\n  background-color: #f2f2f2;\n  padding: 0 2em; }\n  .sg-layout-html .sg-layout-page .sg-layout-header {\n    min-height: 4em;\n    background: #FFFFFF;\n    margin-bottom: 1.25rem; }\n  .sg-layout-html .sg-layout-page .sg-layout-footer {\n    min-height: 5em;\n    background: transparent; }\n\nbody .sg-layout-content {\n  min-height: 10em;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem; }\n  body .sg-layout-content .grid {\n    border: 1px dashed red;\n    padding: 0.5em;\n    margin-left: 0; }\n    body .sg-layout-content .grid .grid__item {\n      border: 1px dashed yellowgreen;\n      padding: 0.5em; }\n      body .sg-layout-content .grid .grid__item span {\n        min-height: 5em;\n        padding: 0.5em;\n        background-color: #fafafa;\n        display: block;\n        margin-bottom: 0.7em; }\n  body .sg-layout-content aside,\n  body .sg-layout-content main {\n    position: relative;\n    border: 1px dotted blue;\n    padding: 0.5em; }\n    body .sg-layout-content aside::after,\n    body .sg-layout-content main::after {\n      border-radius: 4px;\n      background-color: blue;\n      color: white;\n      display: block;\n      position: absolute;\n      margin: 1px;\n      font-size: 11px;\n      top: -6px;\n      left: -2px; }\n  body .sg-layout-content main::after {\n    content: \"main\"; }\n  body .sg-layout-content aside::after {\n    content: \"aside\"; }\n\n.sg-dummy-container-2x1-fullwidth {\n  width: 100%;\n  min-height: 15em;\n  background-color: #fafafa;\n  display: block;\n  margin-bottom: 0.7em; }\n","/*\n *   Styleguide styles. \n *   Do not use these classes in production\n */\n@import \"../scss/00-global/01-settings\"; \n@import \"../scss/00-global/02-mixins\";\n \n$styleguide-namespace:              $namespace !default;\n\n\n#{$styleguide-namespace}pre code {\n    background-color:               #FAFCBA; \n    display:                        block;\n    padding:                        1em; \n    margin:                         0 0 2em 0;\n    width:                          100%;\n    //white-space:                     pre-wrap; \n    overflow-x:                     scroll;\n    overflow-x:                     auto;\n    font-size:                      12px;\n    > * {\n        max-width:                  100%; \n    }\n}\n\n#{$styleguide-namespace}.sg-collapse {\n    background-color:       #FAFCBA;\n    margin-bottom:          3em;\n    code {\n        margin:             0;\n    }\n}\n\n#{$styleguide-namespace}form + .sg-collapse {\n    margin-top:             -$gridGutter;\n}\n\n#{$styleguide-namespace}.sg-code-inline {\n    display:                    inline;\n    margin:                     0;\n    vertical-align:             top;\n    background-color:       #f7f7f9;\n    color:                  #bd4147;\n    font-size:              12px;\n    padding:                0rem 0.4rem;\n    font-family:            monospace;\n    display:                inline-block;\n    width:                  auto;\n    margin:                 0;\n}\n\n#{$styleguide-namespace}.sg-tabs-list {\n    //@include list--no-arrows();\n    list-style:             none;\n    padding:                0;\n}\n\n#{$styleguide-namespace}.sg-boxeditems {\n    ul {\n        overflow: hidden; \n        list-style: none;\n        list-item-style:    none;  \n        h4 {\n            margin-top:     0;\n        }\n        > li {\n            border:     1px solid #dddddd;\n            margin:     0 0.2em 0.2em 0;\n            overflow:   hidden;\n            padding:    0.3em 1.3em; \n            float:      left;\n            width:      14em;\n            text-align: center;\n            &::before {\n                display:none; // remove arrows\n            }\n        }\n        \n    }\n    .sg-swatch {\n        display:    block;\n        height:     5em;\n        text-align: center;\n        .fa-icon {\n            vertical-align: middle;\n            text-align:     center;\n            &::after {\n                display:    inline-block;\n                content:    \"\";\n                height:     100%;\n                vertical-align: middle;\n            }\n        }\n    }\n    .sg-label {\n        text-align:     center;\n        display:        block;\n        &::after {\n            display:    block; \n        }\n    }\n}\n\n#{$styleguide-namespace}.styelguide-colors {\n    .sg-label {\n        text-align:     center;\n        display:        block;\n        &::after {\n            display:    block;\n        }\n    }\n    .sg-color-white {\n        background-color: $white;\n        + .sg-label::after {\n            //content:    \"#{$white}\";\n        }\n    }\n    .sg-color-black {\n        background-color: $black;\n        + .sg-label::after {\n           //content:    \"#{$black}\";\n        }\n    }\n    .sg-color-grey {\n        background-color: $grey;\n        + .sg-label::after {\n            //content:    \"#{$grey}\";\n        }\n    }\n    .sg-color-red {\n        background-color: $red;\n        + .sg-label::after {\n            //content:    \"#{$red}\";\n        }\n    }\n    .sg-color-blue {\n        background-color: $blue;\n        + .sg-label::after {\n            //content:    \"#{$blue}\";\n        }\n    }\n    .sg-color-greyDark {\n        background-color: $greyDark;\n        + .sg-label::after {\n            //content:    \"#{$greyDark}\";\n        }\n    }\n    .sg-color-greysource {\n        background-color: $greySource;\n        + .sg-label::after {\n            //content:    \"#{$greySource}\";\n        }\n    }\n    .sg-color-lightestTextGrey {\n        background-color: $lightestTextGrey;\n       &::after {\n            content:    \" \" !important;\n        }\n    }\n    .sg-color-greyBorder {\n        background-color: $greyBorder;\n        &::after {\n            content:    \" \" !important;\n        }\n    }\n}\n\n#{$styleguide-namespace}.styleguide {\n    .sg-def-h1::after {\n        //content:    \" font: #{$font-weight-h1} #{$font-size-h1}/#{$line-height-h1} #{$font-family-h1}; color: #{$font-color-h1}\";\n    }\n    .sg-def-h2::after {\n        //content:    \" font: #{$font-weight-h2} #{$font-size-h2}/#{$line-height-h2} #{$font-family-h2}; color: #{$font-color-h2}\";\n    }\n    .sg-def-h3::after {\n        //content:    \" font: #{$font-weight-h3} #{$font-size-h3}/#{$line-height-h3} #{$font-family-h3}; color: #{$font-color-h3}\";\n    }\n    .sg-def-h4::after {\n        //content:    \" font: #{$font-weight-h4} #{$font-size-h4}/#{$line-height-h4} #{$font-family-h4}; color: #{$font-color-h4}\";\n    }\n    .sg-def-p {\n        display:    block;\n        &::after {\n            //content:    \" Basis font: normal #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$baseTextColor}\";\n        }\n    }\n    .sg-def-pb {\n        display:    block;\n        &::after {\n            //content:    \" Basis font: bold #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$baseTextColor}\";\n        }\n    }\n    .sg-def-a {\n        display:    block;\n        &::after {\n            //content:    \"font: normal #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$linkColor}\";\n        }\n    }\n    .sg-def-source {\n        display:    block;\n        &::after {\n            //content:    \"font: normal #{$smallest-font-size}/1.2 #{$base-font-family}; color: #{$greySource}\";\n        }\n    }\n    .sg-def-sourceDesk {\n        display:    block;\n        &::after {\n            content:    \"font: normal #{$smallest-font-size}/1.2 #{$base-font-family}; color: #{$greySourceDesk}\";\n        }\n    }\n    .sg-color-greyBorder {\n        &::after {\n            content:    \"#{$greyBorder}\";\n        }\n    }\n    .sg-color-lightestTextGrey {\n        &::after {\n            content:    \"#{$lightestTextGrey}\";\n        }\n    }\n    label {\n        font-weight: bold;\n    }\n}\n\n#{$styleguide-namespace}.styleguide-grids {\n    .grid__item > *:not([class*=grid]) {\n        min-height:         60px;\n        //background-color:   #CDE3F7;\n        box-shadow: 0 0 1px inset;\n        display:            block;\n        margin-bottom:      $gridGutter;\n    }\n    .grid__item .grid__item > *:not([class*=grid]) {\n        //background-color:   #F7E6E6;\n    }\n}\n\n#{$styleguide-namespace}.styleguide-heading-section {\n    @include heading--addbottomborder();\n    margin-top: 3em;\n    margin-bottom: 2em;\n    color:  $baseTextColor;\n}\n\n\n#{$styleguide-namespace}.sg-layout-html {\n    width:              100%;\n    border:             1px solid $black;\n    background-color:   $page-background-color;\n    padding:            0 2em;\n    .sg-layout-page {\n        //@include box-shadow(0px, 0px, 10px, 0px, rgba(100, 100, 100, 0.2));\n        //background-color:   $white;\n        .sg-layout-header {\n            min-height:     4em;\n            background:     $white;\n            margin-bottom:  $gridGutter;\n        }\n        .sg-layout-footer { \n            min-height:     5em;\n            background:     transparent;\n        }\n    }\n}\n\nbody .sg-layout-content {\n    min-height:     10em;\n    @include getRem('padding-left', $pagePaddingPalmPx);\n    @include getRem('padding-right', $pagePaddingPalmPx);\n    .grid {\n        border:         1px dashed red;\n        padding: 0.5em;\n        margin-left: 0;\n        .grid__item {\n            border:         1px dashed yellowgreen;;\n            padding: 0.5em;\n            span {\n                min-height:     5em;\n                padding: 0.5em;\n                background-color: #fafafa;\n                display:        block;\n                margin-bottom:  0.7em;\n            }\n        }\n    }\n    aside,\n    main {\n        position: relative;\n        border: 1px dotted blue;\n        padding: 0.5em;\n        &::after {\n            border-radius: 4px;\n            background-color: blue;\n            color:  white;\n            display: block;\n            position: absolute;\n            margin: 1px;\n            font-size: 11px;\n            top: -6px;\n            left: -2px;\n        }\n    }\n    main {\n        &::after {\n            content: \"main\"\n        }\n    }\n    aside {\n        &::after {\n            content: \"aside\"\n        }\n    }\n}\n\n.sg-dummy-container-2x1-fullwidth {\n    width:  100%;\n    min-height:     15em;\n    background-color: #fafafa;\n    display:        block;\n     margin-bottom:  0.7em;\n}\n\n\n","/***************************************************\n * OUR PAGE SETTINGS\n */\n\n\n/* We can use a wrapperclass to make unique rules and\n * avoid conflicts with existing older css classes.\n *\n *   <div class=\"our-namespace-to-isolate-the-rules\">\n *       <div class=\"teaser\">\n *           [...]\n *       </div>\n *   </div>\n */\n//We can set a global namespace...\n$namespace:                       null; //\".mynamespace \"; // to use as a wrapper we need a whitespace at the end!\n\n// ...or we enable/disable each set of rules\n//$footer-namespace:              null;\n//$header-namespace:              null;\n// [...]\n\n// Base Colors\n$white:                         #FFFFFF;\n$black:                         #000000;\n$red:                           #E71835;\n$blue:                          #086D9A;\n$bluelight:                     $blue;\n$grey:                          #f2f2f2;\n$greyDark:                      #e3e3e3;\n$greyDisabled:                  #D5D5D5;\n$greyBgMarginal:                $greyDark; // Marginal Background Color\n// Special Colors\n$lightestTextGrey:              #777777; // quote\n$greyBorder:                    #CCCCCC;\n$greyInputBorder:               $greyBorder;\n$greySource:                    $lightestTextGrey;\n$greySourceDesk:                darken($white, 12%);\n$greyAuthor:                    #aaaaaa;\n$blueAuthor:                    #4ac6ff;\n$greyAnzeige:                   $lightestTextGrey;\n$page-background-color:         $grey;\n$labelColorLight:               $lightestTextGrey;\n// form validation colors:\n$formElementBorderColor:        $greyInputBorder;\n$formgoupBottomMarginPx:        14px;\n// TextColors in validated forms and messageboxes\n$textSuccessColor:              #008000; // checklist icon\n$textWarningColor:              #f0ad4e;\n$textInfoColor:                 #FFBF00;\n$textErrorColor:                $red;\n// message box colors:\n$messageBaseBg:                 #fcf8e3;\n$messageSuccessBg:              #dff0d8;\n$messageErrorBg:                #f2dede;\n\n// Dimensions\n$smallGapPx:                      12px;\n$mediumGapPx:                     16px;\n$largeGapPx:                      20px;\n$pageWidthDeskPx:               1420px;  // max width for hero units and header\n$contentWidthDeskPx:            940px; // max width for inner content units\n$contentWidthDeskArticlePx:     700px;\n$gridGutter:                    1.250rem; // 20px_16px;\n$blockPaddingPx:                $largeGapPx; // Grey Teaser...\n$pagePaddingPx:                 40px;\n$pagePaddingPalmPx:             20px;\n$teaserInnerPadding:            $largeGapPx;\n$blockBottomMarginPx:           30px; // Teaser...\n$teaserBorderedPaddingPx:       $mediumGapPx;\n$teaserBorderedMarginTopPx:     $largeGapPx;\n$breakointSmallest:             (420px / 16px) * 1rem;\n$breakointPalm:                 (720px / 16px) * 1rem;\n$breakointDesk:                 ($pageWidthDeskPx / 16px) * 1rem;\n$articleImageMaxHeightPx:       468px;\n$pageWidthDesk:                 $breakointDesk;\n$formInputHeightPx:             40px;\n$formInputHeightPalmPx:         50px;\n$btn-heightPx:                  $formInputHeightPx;\n$btn-heightPalmPx:              $formInputHeightPalmPx;\n$formItemPaddingPx:             6px;\n$boxPaddingPx:                  $smallGapPx;\n$marginalBoxPaddingPx:          $smallGapPx;\n$easyPopupPaddingPx:            $smallGapPx;\n$formPaddingPx:                 $smallGapPx;\n$formfieldMaxWidth:             none;\n$blockImageMarginBottomPx:      $smallGapPx;\n$channelNavigationElementPadingPx:   10px; // h=42px\n$accordionTitleElementPaddingPx: $channelNavigationElementPadingPx;\n$heroSwiperHeightPx:            215px; //235px;\n$imageframePaddingRem:          1.25rem;\n$tablecellPaddingEm:            0.5em; // Table\n$borderRadius:                  4px; // border radius for buttons etc.\n\n// Font\n$base-font-family:              'droid-sans', Arial, sans-serif;\n$serif-font-family:             'droid-serif', serif;\n$baseTextColor:                 #000000;\n$fontInactiveColor:             #999999;\n$linkColor:                     $blue;\n$inlineBottomGutter:            0.7em; // Margin bottom for paragraphs, lists, ...\n$base-font-size:                18px;\n$smallest-font-size:            12px;\n$bigFontSizePx:                 20px; // some big text blocks\n$base-line-height:              30px;\n$font-size-h1:                  60px;\n$line-height-h1:                75px;\n$font-size-h2:                  40px;\n$line-height-h2:                1.5em;\n$font-size-h3:                  1.2em;\n$line-height-h3:                1.4;\n$font-size-h4:                  0.875rem; // 14px;\n$line-height-h4:                1.500em; // 21px\n$font-color-h1:                 $baseTextColor;\n$font-color-h2:                 $baseTextColor;\n$font-color-h3:                 $baseTextColor;\n$font-color-h4:                 $baseTextColor;\n$font-family-h1:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;\n$font-family-h2:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;\n$font-family-h3:                'droid-sans', Arial, sans-serif;//'droid-serif', serif;\n$font-family-h4:                $base-font-family;\n$font-weight-h1:                700;\n$font-weight-h2:                700;\n$font-weight-h3:                700;\n$font-weight-h4:                700;\n$font-weight-a:                 400;\n\n// Breakpoints\n$breakpoints: (\n    'smallest' '(max-width: '+$breakointSmallest+')',\n    'smallest-and-up' '(min-width: '+($breakointSmallest + 0.001rem)+')',\n    'palm' '(max-width: '+$breakointPalm+')',\n    'lap' '(min-width: '+($breakointPalm + 0.001rem)+') and (max-width: '+($breakointDesk - 0.001rem)+')',\n    \"lap-and-up\" '(min-width: '+($breakointPalm + 0.001rem)+')',\n    \"portable\" '(max-width: '+($breakointDesk - 0.001rem)+')',\n    'desk' '(min-width: '+$breakointDesk+')',\n);\n\n// Do we need some normalize rules (normalize.scss)?\n$use_simple_normalize:          true;\n$use_advanced_normalize:        false;\n\n\n// Pikaday Datepicker\n$pd-font-family:                $base-font-family;\n$pd-text-color:                 $baseTextColor;\n$pd-title-bg:                   $white;\n$pd-picker-border:              $greyBorder;\n$pd-picker-border-bottom:       $greyBorder;\n$pd-th-color:                   $lightestTextGrey;\n$pd-day-color:                  $baseTextColor;\n$pd-day-bg:                     $grey;\n$pd-day-hover-bg:               $blue;\n$pd-day-today-color:            $blue;\n$pd-day-selected-bg:            $blue;\n$pd-week-color:                 $lightestTextGrey;\n$pd-day-selected-shadow:        transparent;\n","/***************************************************\n *\n *  some little prÃ¤fix mixins\n *\n */\n\n@mixin box-sizing($box-model) {\n          box-sizing: $box-model;\n}\n\n@mixin opacity($opacity) {\n          transition: $opacity;\n}\n\n@mixin transition($transition) {\n    transition:         $transition;\n}\n\n@mixin box-shadow($top, $left, $blur, $spred, $color:\"rgba(0,0,0,0.75)\", $inset:\"\") {\n  box-shadow:           $top $left $blur $spred $color #{$inset};\n}\n\n@mixin border-radius($radius) {\n          border-radius:    $radius;\n}\n\n/***************************************************\n *\n *  px to rem functions\n *\n */\n\n@mixin fontsize($fontSizePx: 14px, $base: 16px) {\n    font-size:          ($fontSizePx / $base) * 1rem;\n}\n\n/**\n * get any css-rule with rem and px from px\n */\n@mixin getRem($rule: font-size, $sizePx: 16px, $base: 16px) {\n    #{$rule}:              ($sizePx / $base) * 1rem;\n}\n\n\n\n\n/***************************************************\n * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php\n * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing\n * over and over in your markup.\n */\n@mixin clearfix() {\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n}\n.clearfix {\n    @include clearfix();\n}\n\n\n\n\n/***************************************************\n *\n *  Headings\n *\n */\n\n@mixin heading--reset() {\n    font-weight:            bold;\n    color:                  $baseTextColor;\n    border:                 0 none;\n}\n\n@mixin heading--base() {\n     @include clearfix();\n    .right {\n        float:              right;\n        width:              auto;\n    }\n}\n\n@mixin headline1() {\n    font-size:              $font-size-h1;\n    font-family:            $font-family-h1;\n    color:                  $font-color-h1;\n    margin-top:             0;\n    margin-bottom:          0.619em;\n    line-height:            $line-height-h1;\n    font-weight:            $font-weight-h1;\n    a {\n        color:              $font-color-h1;\n    }\n    @media print {\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline2() {\n    font-size:              $font-size-h2;\n    font-family:            $font-family-h2;\n    color:                  $font-color-h2;\n    margin-top:             1em;\n    margin-bottom:          0.45em;\n    line-height:            $line-height-h2;\n    font-weight:            $font-weight-h2;\n    a {\n        color:              $font-color-h2;\n    }\n    @media print {\n        page-break-before:  auto;\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline3() {\n    font-size:              $font-size-h3;\n    font-family:            $font-family-h3;\n    margin-top:             1.5em;\n    margin-bottom:          0.45em;\n    line-height:            $line-height-h3;\n    color:                  $font-color-h3;\n    font-weight:            $font-weight-h3;\n    a {\n        color:              $blue;\n    }\n    @media print {\n        page-break-before:  auto;\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline4() {\n    font-size:              $font-size-h4;\n    margin-top:             1em;\n    margin-bottom:          0.4em;\n    color:                  $font-color-h4;\n    font-weight:            $font-weight-h4;\n    line-height:            $line-height-h4;\n    a {\n        color:              $blue;\n    }\n    @media print {\n        page-break-after:   avoid;\n    }\n}\n\n@mixin fontImageCaption() {\n    font-size:              $smallest-font-size;\n    font-weight:            bold;\n    line-height:            1.4em;\n    margin-bottom:          1.2em;\n}\n\n@mixin heading--addbottomborder() {\n    border-bottom:          5px solid $greyBorder;\n    margin-top:             0;\n    margin-bottom:          0.6rem;\n    padding-bottom:         0.2rem;\n}\n\n\n@mixin heading--bluebox(){\n    font-size:              1rem;\n    background-color:       $blue;\n    color:                  $white !important;\n    padding:                0.425rem 0.625rem;\n    margin-bottom:          0;\n    margin-top:             0;\n    font-weight:            normal;\n    a {\n        color:              $white;\n    }\n    + form {\n        border-top:         0 none;\n    }\n}\n\n/***************************************************\n *\n *  Source / Copyright\n *\n */\n@mixin source--base() {\n    color:              $greySource;\n    display:            inline-block;\n    a {\n        color: inherit;\n    }\n}\n\n\n\n/***************************************************\n *\n *  List mixins\n *\n */\n\n\n@mixin list--bullet-item() {\n    // i am a li\n    line-height:            1.3em;\n    margin-bottom:          0.5em;\n    margin-left:            0;\n    padding-left:           1em;\n    &::before {\n        content:            \"\\f111\";\n        font-size:          0.5em;\n        vertical-align:     0.3em;\n        text-indent:        -0.5em;\n        color:              $black;\n        margin-left:        -1.3em;\n        display:            inline-block;\n        float:              none;\n        height:             1em;\n        line-height:        1em;\n        font-family:        FontAwesome;\n        height:             1em;\n        width:              1.3em;\n    }\n\n}\n\n// Basic horizontal lists\n// itemborder: adds a vertical line between listitems\n@mixin list--horizontal($itemBorder: false) {\n    @include clearfix();\n    @include list--no-arrows();\n    display:                table; // !\n    padding:                0;\n    margin:                 0 0 0.5em 0;\n    list-style:             none;\n    line-height:            $base-line-height;\n    li {\n        float:              none;\n        display:            inline;\n        @include getRem('line-height', $base-line-height);\n        margin:             0 0.25em 0 0;\n        padding-left:       0 !important;\n        @if $itemBorder {\n            > *::after {\n                content:        \"|\";\n                display:        inline-block;\n                margin-left:    0.5em;\n                line-height:    1.25;\n            }\n            &:last-child > * {\n                &:after {\n                    content:        \"\";\n                    margin-left:    0em;\n                }\n            }\n        }\n    }\n}\n\n\n\n@mixin list--zebra() {\n    > li {\n        padding:                0.45em 0.5em 0.4em 1.5em;\n        &:nth-child(odd) {\n            background-color:   $grey;\n        }\n    }\n}\n\n@mixin list--bordered() {\n    > li {\n        border-bottom:          1px solid $greyBorder;\n        margin-bottom:          1em;\n        padding-bottom:         1em;\n        &:last-child {\n            border-bottom:      0 none;\n        }\n    }\n}\n\n@mixin list--add-disc() {\n    list-style-type:            disc;\n    padding-left:               1em;\n    > li {\n        padding-left:           0;\n    }\n}\n\n\n// Add a symbol (default is an arrow) as list item style:\n@mixin arrowlist--base($icon: \"\\f054\", $iconcolor: $red, $iconsize: 10px) {\n    margin-left:  0;\n    padding: 0;\n    list-style: none;\n    > li {\n        margin-left:            0;\n        padding-left:           1em;\n        &::before {\n            margin-left:        -1.3em;\n            color:              $iconcolor;\n            content:            $icon; // fa-chevron-right\n            display:            inline-block;\n            float:              left;\n            @include fontsize($iconsize);\n            height:             1em;\n            //line-height:        1.9em;\n            vertical-align:     baseline;\n            font-family:        FontAwesome;\n            height:             1em;\n            width:              1.3em;\n            text-indent:        0;\n        }\n    }\n}\n\n@mixin list--zebra() {\n    > li {\n        padding:                0.45em 0.5em 0.4em 1.5em;\n        &:nth-child(odd) {\n            background-color:   $grey;\n        }\n    }\n}\n\n@mixin list--no-arrows() {\n    padding-left:               0;\n    list-style:                 none;\n    > li {\n        padding-left:           0;\n        &::before {\n            content:            \"\" !important;\n            margin:             0 !important;\n            display:            none !important;\n        }\n    }\n}\n\n\n// new: with list wrapper\n@mixin paginator-item() {\n    > * {\n        border:                         1px solid $greyBorder;\n        margin-right:                   -1px;\n        color:                          $linkColor;\n        min-height:                     2.4em;\n        min-width:                      2.6em;\n        text-align:                     center;\n        padding:                        0.4em 0.75em 0.3em 0.75em;\n        display:                        block;\n        text-decoration:                none;\n        background-color:               $white;\n        outline-color:                  black;\n    }\n    a:hover,\n    a:focus {\n        background-color:           $grey;\n        color:                      $linkColor;\n    }\n    .disabled {\n        color:                      $greyDisabled;\n        background-color:           $white;\n        pointer-events:             none;\n        &:hover,\n        &:focus {\n            background-color:       $white;\n            color:                  $greyDisabled;\n        }\n    }\n    .active {\n        color:                      $white;\n        background-color:           $blue;\n        border-color:               $blue;\n        pointer-events:             none;\n        &:hover,\n        &:focus {\n            background-color:       $blue;\n            color:                  $white;\n        }\n    }\n    &:first-child > * {\n        border-top-left-radius:     4px;\n        border-bottom-left-radius:  4px;\n    }\n    &:last-child > * {\n        border-top-right-radius:    4px;\n        border-bottom-right-radius: 4px;\n    }\n}\n\n\n// simple white box with padding\n@mixin nodeshop_white_box() {\n    background:             $white;\n    padding:                $largeGapPx;\n    margin:                 0 0 $blockPaddingPx 0;\n    > *:first-child {\n        margin-top:         0;\n    }\n    > *:last-child {\n        margin-bottom:         0;\n    }\n}\n@mixin nodeshop-heading-with-edit-link() {\n    a {\n        color:              $linkColor;\n        font-weight:        normal;\n        margin-left:        0.5em;\n        &::before {\n            content:        \"\\f040\";\n            font-family:    \"FontAwesome\";\n            display:        inline-block;\n            font-size:      0.9em;\n            margin-right:    0.2em;\n        }\n    }\n}\n\n/***************************************************\n * A simple mixin to quickly generate whole media queries from the aliases and\n * conditions defined in `_settings.responsive.scss`.\n *\n * Usage:\n *\n * .foo {\n *     color: green;\n *\n *     @include media-query(palm) {\n *         color: red;\n *     }\n *\n * }\n */\n@mixin media-query($mq) {\n    $breakpoint-found: false;\n    // Loop through the list of breakpoints weâve provided in our settings file.\n    @each $breakpoint in $breakpoints {\n        // Grab the alias and the condition from their respective locations in\n        // the list.\n        $alias:     nth($breakpoint, 1);\n        $condition: nth($breakpoint, 2);\n        // If the media query weâve specified has an alias and a condition...\n        @if $mq == $alias and $condition {\n            $breakpoint-found: true;\n\n            // note:\n            // Opera Browser seems to have 530px width in print layout (so it turns tomobile layout)\n            // so we have to add screen and print mediatype\n            @if $alias == \"palm\" {\n                @media screen and #{$condition} {\n                    @content;\n                }\n            } @else {\n                @media print, #{$condition} {\n                    @content;\n                }\n            }\n        }\n    }\n    // If the user specifies a non-exitent alias, send them a warning.\n    @if $breakpoint-found == false{\n        @warn \"Oops! Breakpoint â#{$mq}â does not exist.\"\n    }\n}\n\n\n\n\n\n\n/***************************************************\n *\n *   FORM\n *\n */\n\n@mixin formgroup--prepend-label() {\n    @include clearfix();\n    label {\n        background:                 $white none repeat scroll 0 0;\n        display:                    inline-block;\n        float:                      left;\n        padding:                    $formItemPaddingPx;\n        margin:                     0;\n        font-weight:                bold;\n        border:                     1px solid $formElementBorderColor;\n        border-right:               0 none;\n        margin-top:                 0;\n        line-height:                1rem;\n        @include getRem('min-height', $btn-heightPx);\n        @include media-query('palm') {\n            @include getRem('min-height', $btn-heightPalmPx);\n        }\n    }\n    .controls {\n        display:                    flex;\n    }\n    input[type=\"number\"] {\n        min-width: 0;   // firefox fix\n    }\n}\n\n@mixin FormBaseBackground() {\n    @include getRem('padding', $formPaddingPx);\n    padding-bottom:                 1.1rem;\n    background-color:               $grey;\n    border:                         1px solid $grey; // Barrierefreiheit\n}\n\n\n\n/***************************************************\n *\n *   BUTTON\n *\n */\n\n/*\n * Twitter Follow Button\n *\n **/\n@mixin button--twitter-follow() {\n    background-color:       #f5f8fa;\n    background-image:       linear-gradient(#fff, #f5f8fa);\n    border:                 1px solid #e1e8ed;\n    border-radius:          4px;\n    color:                  $baseTextColor;\n    display:                inline-block;\n    font-weight:            700;\n    line-height:            1;\n    padding:                0.5em 0.9em 0.5em 0.8em;\n    &:active,\n    &:focus,\n    &:hover {\n        background-color:   #e1e8ed;\n        background-image:   linear-gradient(#fff, #e1e8ed);\n        text-decoration:    none;\n    }\n    &::before {\n        content:            \"\\f099\"; // fa-twitter\n        font-family:        FontAwesome;\n        display:            inline-block;\n        width:              1em;\n        height:             1em;\n        color:              #1DA1F2;\n        margin-right:       0.3em;\n    }\n}\n\n\n\n/***************************************************\n *\n *   Links\n *\n */\n@mixin link-readmore() {\n    color:                  $linkColor;\n    display:                inline;\n    white-space:            nowrap;\n    &::after {\n        content:            \"\\f061\";\n        font-family:        \"FontAwesome\";\n        display:            inline-block;\n        margin-left:        0.2em;\n        //line-height:        0.8em;\n        //ext-align:         center;\n        text-decoration:    underline; // IE10 fix\n    }\n    &:after,\n    &:hover:after {\n        text-decoration:    none; // IE10 fix\n    }\n}\n\n/***************************************************\n *\n *   Icons\n *\n */\n@mixin icon-base() {\n    display:                inline-block;\n    font-family:            FontAwesome;\n    line-height:            1;\n    font-size:              inherit; // can't have font-size inherit on line above, so need to override\n}\n\n\n%icon-base {\n    @include icon-base();\n}\n\n\n%icon-search {\n    @extend %icon-base;\n    content:            \"\\f002\"; // fa-search\n}\n\n%icon-home {\n    @extend %icon-base;\n    content:            \"\\f015\"; // fa-home\n}\n\n@mixin icon-hamburger() {\n    @include icon-base();\n    content:            \"\\f0c9\"; // fa-bars\n    width:              0.7em;\n}\n\n%icon-hamburger {\n    @include icon-hamburger();\n}\n\n// clears text for icon instead\n%icon-clear-text {\n    display:            inline-block;\n    height:             1em;\n    line-height:        1em;\n    width:              0;\n    min-height:         0;\n    overflow:           hidden;\n    padding-right:      1em;\n}\n\n/***************************************************\n *\n *   Widget\n *\n */\n@mixin widgetform_add_background_image($imageurl, $bgposition: 5% center, $bgsize: 25% 80%) {\n    background-position:        $bgposition;\n    background-size:            $bgsize;\n    background-image:           url($imageurl);\n    background-repeat:          no-repeat;\n    padding-left:               35%; // 7.5rem;\n    @include getRem ('padding-top', 24px);\n    @include getRem ('padding-right', 12px);\n}\n"],"sourceRoot":""}