{"version":3,"sources":["webpack:///./source-bundle/styleguide/source-bundle/scss/00-global/02-mixins.scss","webpack:///./source-bundle/styleguide/source-bundle/styleguide/styleguide.scss"],"names":[],"mappings":"AAoDI,gBACI,WACA,cACA,WC7CR,SACI,yBACA,cACA,YACA,eACA,WAEA,kBACA,gBACA,eATJ,WAWQ,eAIR,aACI,yBACA,kBACA,kBACI,SAIR,kBACI,oBAGJ,gBACI,eAEA,mBACA,yBACA,cACA,eACA,gBACA,sBACA,qBACA,WACA,SAGJ,cAEI,gBACA,UAGJ,kBAEQ,gBACA,gBACA,qBACA,qBACI,aANZ,qBASY,sBACA,qBACA,gBACA,mBACA,WACA,WACA,kBAfZ,4BAiBgB,aAjBhB,0BAuBQ,cACA,WACA,kBACA,mCACI,sBACA,kBACA,yCACI,qBACA,WACA,YACA,sBAjChB,yBAsCQ,kBACA,cACA,+BACI,cAMR,6BACI,kBACA,cAHR,mCAKY,cALZ,mCASQ,sBAKJ,mCACI,sBAfR,kCAqBQ,yBArBR,iCA2BQ,yBAKJ,kCACI,yBAjCR,sCAuCQ,yBAvCR,sFAmDQ,sBACD,oDACK,sBAGR,wCACI,sBAzDR,8CA2DY,sBA0CR,6HACI,cAtCR,qCAwCY,8EAxCZ,uCA6CY,eAIJ,6CACI,eAGR,kBACI,gBAIR,kDAEQ,gBAEA,yBACA,cACA,sBAOR,4BDhFI,6BACA,aACA,oBACA,qBC+EA,eACA,kBACA,WAIJ,gBACI,WACA,sBACA,yBACA,cAII,kDACI,eACA,gBACA,sBAEJ,kDACI,eACA,uBAKZ,wBACI,qCDnOA,sBCkOJ,8BAKQ,sBACA,aACA,cACA,0CACI,0BACA,aACA,+CACI,eACA,aACA,yBACA,cACA,mBAhBhB,2DAsBQ,kBACA,uBACA,aAxBR,uEA0BY,kBACA,sBACA,WACA,cACA,kBACA,WACA,eACA,SACA,UAIJ,mCACI,eAvCZ,oCA4CY,gBAKZ,kCACI,WACA,gBACA,yBACA,cACC,mB","file":"styleguide.css","sourcesContent":["/***************************************************\n *\n *  some little prÃ¤fix mixins\n *\n */\n \n@mixin box-sizing($box-model) {\n          box-sizing: $box-model;\n}\n\n@mixin opacity($opacity) {\n          transition: $opacity;\n}\n\n@mixin transition($transition) {\n    transition:         $transition;\n}\n\n@mixin box-shadow($top, $left, $blur, $spred, $color:\"rgba(0,0,0,0.75)\", $inset:\"\") {\n  box-shadow:           $top $left $blur $spred $color #{$inset};\n}\n\n@mixin border-radius($radius) {\n          border-radius:    $radius;\n}\n\n/***************************************************\n *\n *  px to rem functions\n *\n */\n \n@mixin fontsize($fontSizePx: 14px, $base: 16px) {\n    font-size:          ($fontSizePx / $base) * 1rem;\n}\n\n/**\n * get any css-rule with rem and px from px\n */\n@mixin getRem($rule: font-size, $sizePx: 16px, $base: 16px) {\n    #{$rule}:              ($sizePx / $base) * 1rem;\n}\n\n\n\n\n/***************************************************\n * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php\n * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing\n * over and over in your markup.\n */\n@mixin clearfix() {\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n}\n.clearfix {\n    @include clearfix();\n}\n\n\n\n\n/***************************************************\n *\n *  Headings\n *\n */\n \n@mixin heading--reset() {\n    font-weight:            bold;\n    color:                  $baseTextColor;\n    border:                 0 none;\n}\n\n@mixin heading--base() {\n     @include clearfix();\n    .right {\n        float:              right;\n        width:              auto;\n    }\n}\n\n@mixin headline1() {\n    font-size:              $font-size-h1;\n    font-family:            $font-family-h1;\n    color:                  $font-color-h1;\n    margin-top:             0;\n    margin-bottom:          0.619em;\n    line-height:            $line-height-h1;\n    font-weight:            $font-weight-h1;\n    a {\n        color:              $font-color-h1;\n    }\n    @media print {\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline2() {\n    font-size:              $font-size-h2;\n    font-family:            $font-family-h2;\n    color:                  $font-color-h2;\n    margin-top:             1em;\n    margin-bottom:          0.45em;\n    line-height:            $line-height-h2;\n    font-weight:            $font-weight-h2;\n    a {\n        color:              $font-color-h2;\n    }\n    @media print {\n        page-break-before:  auto;\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline3() {\n    font-size:              $font-size-h3;\n    font-family:            $font-family-h3;\n    margin-top:             1.5em;\n    margin-bottom:          0.45em;\n    line-height:            $line-height-h3;\n    color:                  $font-color-h3;\n    font-weight:            $font-weight-h3;\n    a {\n        color:              $blue;\n    }\n    @media print {\n        page-break-before:  auto;\n        page-break-after:   avoid !important;\n    }\n}\n\n@mixin headline4() {\n    font-size:              $font-size-h4;\n    margin-top:             1em;\n    margin-bottom:          0.4em;\n    color:                  $font-color-h4;\n    font-weight:            $font-weight-h4;\n    line-height:            $line-height-h4;\n    a {\n        color:              $blue;\n    }\n    @media print {\n        page-break-after:   avoid;\n    }\n}\n\n@mixin fontImageCaption() {\n    font-size:              $smallest-font-size;\n    font-weight:            bold; \n    line-height:            1.4em;\n    margin-bottom:          1.2em;\n}\n\n@mixin heading--addbottomborder() {\n    border-bottom:          5px solid $greyBorder;\n    margin-top:             0;\n    margin-bottom:          0.6rem;\n    padding-bottom:         0.2rem;\n}\n\n\n@mixin heading--bluebox(){\n    font-size:              1rem;\n    background-color:       $blue;\n    color:                  $white !important;\n    padding:                0.425rem 0.625rem;\n    margin-bottom:          0;\n    margin-top:             0;\n    font-weight:            normal;\n    a {\n        color:              $white;\n    }\n    + form {\n        border-top:         0 none;\n    }\n}\n\n/***************************************************\n * \n *  Source / Copyright\n * \n */\n@mixin source--base() {\n    color:              $greySource;\n    display:            inline-block;\n    a {\n        color: inherit;\n    }\n}\n\n\n\n/***************************************************\n * \n *  List mixins\n * \n */\n\n\n@mixin list--bullet-item() {\n    // i am a li \n    line-height:            1.3em;\n    margin-bottom:          0.5em;\n    margin-left:            0;\n    padding-left:           1em;\n    &::before {\n        content:            \"\\f111\";\n        font-size:          0.5em;\n        vertical-align:     0.3em;\n        text-indent:        -0.5em;\n        color:              $black;\n        margin-left:        -1.3em;\n        display:            inline-block;\n        float:              none; \n        height:             1em;\n        line-height:        1em;\n        font-family:        FontAwesome;\n        height:             1em;\n        width:              1.3em;\n    }\n \n}\n\n// Basic horizontal lists\n// itemborder: adds a vertical line between listitems\n@mixin list--horizontal($itemBorder: false) {\n    @include clearfix();\n    @include list--no-arrows();\n    display:                table; // !\n    padding:                0;\n    margin:                 0 0 0.5em 0;\n    list-style:             none;\n    line-height:            $base-line-height;\n    li {\n        float:              none;\n        display:            inline;\n        @include getRem('line-height', $base-line-height);\n        margin:             0 0.25em 0 0;\n        padding-left:       0 !important;\n        @if $itemBorder {\n            > *::after {\n                content:        \"|\";\n                display:        inline-block;\n                margin-left:    0.5em;\n                line-height:    1.25;\n            }\n            &:last-child > * {\n                &:after {\n                    content:        \"\";\n                    margin-left:    0em;\n                }\n            }\n        }\n    }\n}\n\n\n\n@mixin list--zebra() {\n    > li {\n        padding:                0.45em 0.5em 0.4em 1.5em;\n        &:nth-child(odd) {\n            background-color:   $grey;\n        }\n    } \n}\n\n@mixin list--bordered() {\n    > li {\n        border-bottom:          1px solid $greyBorder;\n        margin-bottom:          1em;\n        padding-bottom:         1em;\n        &:last-child {\n            border-bottom:      0 none;\n        }\n    } \n}\n\n@mixin list--add-disc() {\n    list-style-type:            disc;\n    padding-left:               1em;\n    > li {\n        padding-left:           0;\n    }\n}\n\n\n// Add a symbol (default is an arrow) as list item style:\n@mixin arrowlist--base($icon: \"\\f054\", $iconcolor: $red, $iconsize: 10px) {\n    margin-left:  0;\n    padding: 0;\n    list-style: none;\n    > li {    \n        margin-left:            0;\n        padding-left:           1em;\n        &::before {\n            margin-left:        -1.3em;\n            color:              $iconcolor;\n            content:            $icon; // fa-chevron-right\n            display:            inline-block;\n            float:              left;\n            @include fontsize($iconsize);\n            height:             1em;\n            //line-height:        1.9em;\n            vertical-align:     baseline;\n            font-family:        FontAwesome;\n            height:             1em;\n            width:              1.3em;\n            text-indent:        0;\n        }\n    } \n}\n\n@mixin list--zebra() {\n    > li {\n        padding:                0.45em 0.5em 0.4em 1.5em;\n        &:nth-child(odd) {\n            background-color:   $grey;\n        }\n    } \n}\n\n@mixin list--no-arrows() {\n    padding-left:               0;\n    list-style:                 none;\n    > li {\n        padding-left:           0;\n        &::before {\n            content:            \"\" !important;\n            margin:             0 !important;\n            display:            none !important;\n        }\n    }\n}\n\n\n// new: with list wrapper\n@mixin paginator-item() {\n    > * {\n        border:                         1px solid $greyBorder;\n        margin-right:                   -1px;\n        color:                          $linkColor;\n        min-height:                     2.4em;\n        min-width:                      2.6em;\n        text-align:                     center;\n        padding:                        0.4em 0.75em 0.3em 0.75em;\n        display:                        block;\n        text-decoration:                none;\n        background-color:               $white;\n        outline-color:                  black;\n    }\n    a:hover,\n    a:focus {\n        background-color:           $grey;\n        color:                      $linkColor;\n    }\n    .disabled {\n        color:                      $greyDisabled;\n        background-color:           $white;\n        pointer-events:             none;\n        &:hover,\n        &:focus {\n            background-color:       $white;\n            color:                  $greyDisabled;\n        }\n    }\n    .active {\n        color:                      $white;\n        background-color:           $blue;\n        border-color:               $blue;\n        pointer-events:             none;\n        &:hover,\n        &:focus {\n            background-color:       $blue;\n            color:                  $white;\n        }\n    }\n    &:first-child > * {\n        border-top-left-radius:     4px;\n        border-bottom-left-radius:  4px;\n    }\n    &:last-child > * {\n        border-top-right-radius:    4px;\n        border-bottom-right-radius: 4px;\n    }\n}\n\n\n/***************************************************\n * A simple mixin to quickly generate whole media queries from the aliases and\n * conditions defined in `_settings.responsive.scss`.\n *\n * Usage:\n *\n * .foo {\n *     color: green;\n *\n *     @include media-query(palm) {\n *         color: red;\n *     }\n *\n * }\n */\n@mixin media-query($mq) {\n    $breakpoint-found: false;\n    // Loop through the list of breakpoints weâve provided in our settings file.\n    @each $breakpoint in $breakpoints {\n        // Grab the alias and the condition from their respective locations in\n        // the list.\n        $alias:     nth($breakpoint, 1);\n        $condition: nth($breakpoint, 2);\n        // If the media query weâve specified has an alias and a condition...\n        @if $mq == $alias and $condition {\n            $breakpoint-found: true; \n            \n            // note: \n            // Opera Browser seems to have 530px width in print layout (so it turns tomobile layout)\n            // so we have to add screen and print mediatype\n            @if $alias == \"palm\" {\n                @media screen and #{$condition} {\n                    @content;\n                }\n            } @else {\n                @media print, #{$condition} {\n                    @content;\n                }\n            }\n        }\n    }\n    // If the user specifies a non-exitent alias, send them a warning.\n    @if $breakpoint-found == false{\n        @warn \"Oops! Breakpoint â#{$mq}â does not exist.\"\n    }\n}\n\n\n\n\n\n\n/***************************************************\n *\n *   FORM\n *   \n */\n\n@mixin formgroup--prepend-label() {\n    @include clearfix();\n    label {\n        background:                 $white none repeat scroll 0 0;\n        display:                    inline-block;\n        float:                      left;\n        padding:                    $formItemPaddingPx;\n        margin:                     0;\n        font-weight:                bold;\n        border:                     1px solid $formElementBorderColor;\n        border-right:               0 none;\n        margin-top:                 0;\n        line-height:                1rem; \n        @include getRem('min-height', $btn-heightPx);\n        @include media-query('palm') {\n            @include getRem('min-height', $btn-heightPalmPx);\n        }\n    }\n    .controls {\n        display:                    flex;\n    }\n    input[type=\"number\"] {\n        min-width: 0;   // firefox fix\n    }\n}\n\n@mixin FormBaseBackground() {\n    @include getRem('padding', $formPaddingPx);\n    padding-bottom:                 1.1rem;\n    background-color:               $grey;\n    border:                         1px solid $grey; // Barrierefreiheit \n}\n\n\n\n/***************************************************\n *\n *   BUTTON\n *   \n */\n\n/*\n * Twitter Follow Button\n * \n **/\n@mixin button--twitter-follow() {\n    background-color:       #f5f8fa;\n    background-image:       linear-gradient(#fff, #f5f8fa);\n    border:                 1px solid #e1e8ed;\n    border-radius:          4px;\n    color:                  $baseTextColor;\n    display:                inline-block;\n    font-weight:            700;\n    line-height:            1;\n    padding:                0.5em 0.9em 0.5em 0.8em;\n    &:active, \n    &:focus, \n    &:hover {\n        background-color:   #e1e8ed;\n        background-image:   linear-gradient(#fff, #e1e8ed);\n        text-decoration:    none;\n    }\n    &::before {\n        content:            \"\\f099\"; // fa-twitter\n        font-family:        FontAwesome;\n        display:            inline-block;\n        width:              1em;\n        height:             1em;\n        color:              #1DA1F2;\n        margin-right:       0.3em;\n    }\n}\n\n\n\n/***************************************************\n *\n *   Links\n *   \n */\n@mixin link-readmore() {\n    color:                  $linkColor;\n    display:                inline;\n    white-space:            nowrap; \n    &::after {\n        content:            \"\\f061\";\n        font-family:        \"FontAwesome\";\n        display:            inline-block;\n        margin-left:        0.2em;\n        //line-height:        0.8em;\n        //ext-align:         center;\n        text-decoration:    underline; // IE10 fix\n    }\n    &:after,\n    &:hover:after {\n        text-decoration:    none; // IE10 fix\n    }\n}\n\n/***************************************************\n *\n *   Icons\n *   \n */\n@mixin icon-base() {    \n    display:                inline-block;\n    font-family:            FontAwesome;\n    line-height:            1;\n    font-size:              inherit; // can't have font-size inherit on line above, so need to override\n}\n\n\n%icon-base {    \n    @include icon-base();\n}\n\n\n%icon-search {\n    @extend %icon-base;\n    content:            \"\\f002\"; // fa-search\n}\n\n%icon-home {\n    @extend %icon-base;\n    content:            \"\\f015\"; // fa-home\n}\n\n@mixin icon-hamburger() {\n    @include icon-base();\n    content:            \"\\f0c9\"; // fa-bars\n    width:              0.7em;\n}\n\n%icon-hamburger {\n    @include icon-hamburger();\n}\n\n// clears text for icon instead\n%icon-clear-text {\n    display:            inline-block;\n    height:             1em;\n    line-height:        1em;\n    width:              0;\n    min-height:         0;\n    overflow:           hidden;\n    padding-right:      1em;   \n}\n\n/***************************************************\n *\n *   Widget\n *   \n */\n@mixin widgetform_add_background_image($imageurl, $bgposition: 5% center, $bgsize: 25% 80%) {\n    background-position:        $bgposition;\n    background-size:            $bgsize;\n    background-image:           url($imageurl);\n    background-repeat:          no-repeat;\n    padding-left:               35%; // 7.5rem;\n    @include getRem ('padding-top', 24px);\n    @include getRem ('padding-right', 12px);\n}\n","/*\n *   Styleguide styles. \n *   Do not use these classes in production\n */\n@import \"../scss/00-global/01-settings\"; \n@import \"../scss/00-global/02-mixins\";\n \n$styleguide-namespace:              $namespace !default;\n\n\n#{$styleguide-namespace}pre code {\n    background-color:               #FAFCBA; \n    display:                        block;\n    padding:                        1em; \n    margin:                         0 0 2em 0;\n    width:                          100%;\n    //white-space:                     pre-wrap; \n    overflow-x:                     scroll;\n    overflow-x:                     auto;\n    font-size:                      12px;\n    > * {\n        max-width:                  100%; \n    }\n}\n\n#{$styleguide-namespace}.sg-collapse {\n    background-color:       #FAFCBA;\n    margin-bottom:          3em;\n    code {\n        margin:             0;\n    }\n}\n\n#{$styleguide-namespace}form + .sg-collapse {\n    margin-top:             -$gridGutter;\n}\n\n#{$styleguide-namespace}.sg-code-inline {\n    display:                    inline;\n    margin:                     0;\n    vertical-align:             top;\n    background-color:       #f7f7f9;\n    color:                  #bd4147;\n    font-size:              12px;\n    padding:                0rem 0.4rem;\n    font-family:            monospace;\n    display:                inline-block;\n    width:                  auto;\n    margin:                 0;\n}\n\n#{$styleguide-namespace}.sg-tabs-list {\n    //@include list--no-arrows();\n    list-style:             none;\n    padding:                0;\n}\n\n#{$styleguide-namespace}.sg-boxeditems {\n    ul {\n        overflow: hidden; \n        list-style: none;\n        list-item-style:    none;  \n        h4 {\n            margin-top:     0;\n        }\n        > li {\n            border:     1px solid #dddddd;\n            margin:     0 0.2em 0.2em 0;\n            overflow:   hidden;\n            padding:    0.3em 1.3em; \n            float:      left;\n            width:      14em;\n            text-align: center;\n            &::before {\n                display:none; // remove arrows\n            }\n        }\n        \n    }\n    .sg-swatch {\n        display:    block;\n        height:     5em;\n        text-align: center;\n        .fa-icon {\n            vertical-align: middle;\n            text-align:     center;\n            &::after {\n                display:    inline-block;\n                content:    \"\";\n                height:     100%;\n                vertical-align: middle;\n            }\n        }\n    }\n    .sg-label {\n        text-align:     center;\n        display:        block;\n        &::after {\n            display:    block; \n        }\n    }\n}\n\n#{$styleguide-namespace}.styelguide-colors {\n    .sg-label {\n        text-align:     center;\n        display:        block;\n        &::after {\n            display:    block;\n        }\n    }\n    .sg-color-white {\n        background-color: $white;\n        + .sg-label::after {\n            //content:    \"#{$white}\";\n        }\n    }\n    .sg-color-black {\n        background-color: $black;\n        + .sg-label::after {\n           //content:    \"#{$black}\";\n        }\n    }\n    .sg-color-grey {\n        background-color: $grey;\n        + .sg-label::after {\n            //content:    \"#{$grey}\";\n        }\n    }\n    .sg-color-red {\n        background-color: $red;\n        + .sg-label::after {\n            //content:    \"#{$red}\";\n        }\n    }\n    .sg-color-blue {\n        background-color: $blue;\n        + .sg-label::after {\n            //content:    \"#{$blue}\";\n        }\n    }\n    .sg-color-greyDark {\n        background-color: $greyDark;\n        + .sg-label::after {\n            //content:    \"#{$greyDark}\";\n        }\n    }\n    .sg-color-greysource {\n        background-color: $greySource;\n        + .sg-label::after {\n            //content:    \"#{$greySource}\";\n        }\n    }\n    .sg-color-lightestTextGrey {\n        background-color: $lightestTextGrey;\n       &::after {\n            content:    \" \" !important;\n        }\n    }\n    .sg-color-greyBorder {\n        background-color: $greyBorder;\n        &::after {\n            content:    \" \" !important;\n        }\n    }\n}\n\n#{$styleguide-namespace}.styleguide {\n    .sg-def-h1::after {\n        //content:    \" font: #{$font-weight-h1} #{$font-size-h1}/#{$line-height-h1} #{$font-family-h1}; color: #{$font-color-h1}\";\n    }\n    .sg-def-h2::after {\n        //content:    \" font: #{$font-weight-h2} #{$font-size-h2}/#{$line-height-h2} #{$font-family-h2}; color: #{$font-color-h2}\";\n    }\n    .sg-def-h3::after {\n        //content:    \" font: #{$font-weight-h3} #{$font-size-h3}/#{$line-height-h3} #{$font-family-h3}; color: #{$font-color-h3}\";\n    }\n    .sg-def-h4::after {\n        //content:    \" font: #{$font-weight-h4} #{$font-size-h4}/#{$line-height-h4} #{$font-family-h4}; color: #{$font-color-h4}\";\n    }\n    .sg-def-p {\n        display:    block;\n        &::after {\n            //content:    \" Basis font: normal #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$baseTextColor}\";\n        }\n    }\n    .sg-def-pb {\n        display:    block;\n        &::after {\n            //content:    \" Basis font: bold #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$baseTextColor}\";\n        }\n    }\n    .sg-def-a {\n        display:    block;\n        &::after {\n            //content:    \"font: normal #{$base-font-size}/#{$base-line-height} #{$base-font-family}; color: #{$linkColor}\";\n        }\n    }\n    .sg-def-source {\n        display:    block;\n        &::after {\n            //content:    \"font: normal #{$smallest-font-size}/1.2 #{$base-font-family}; color: #{$greySource}\";\n        }\n    }\n    .sg-def-sourceDesk {\n        display:    block;\n        &::after {\n            content:    \"font: normal #{$smallest-font-size}/1.2 #{$base-font-family}; color: #{$greySourceDesk}\";\n        }\n    }\n    .sg-color-greyBorder {\n        &::after {\n            content:    \"#{$greyBorder}\";\n        }\n    }\n    .sg-color-lightestTextGrey {\n        &::after {\n            content:    \"#{$lightestTextGrey}\";\n        }\n    }\n    label {\n        font-weight: bold;\n    }\n}\n\n#{$styleguide-namespace}.styleguide-grids {\n    .grid__item > *:not([class*=grid]) {\n        min-height:         60px;\n        //background-color:   #CDE3F7;\n        box-shadow: 0 0 1px inset;\n        display:            block;\n        margin-bottom:      $gridGutter;\n    }\n    .grid__item .grid__item > *:not([class*=grid]) {\n        //background-color:   #F7E6E6;\n    }\n}\n\n#{$styleguide-namespace}.styleguide-heading-section {\n    @include heading--addbottomborder();\n    margin-top: 3em;\n    margin-bottom: 2em;\n    color:  $baseTextColor;\n}\n\n\n#{$styleguide-namespace}.sg-layout-html {\n    width:              100%;\n    border:             1px solid $black;\n    background-color:   $page-background-color;\n    padding:            0 2em;\n    .sg-layout-page {\n        //@include box-shadow(0px, 0px, 10px, 0px, rgba(100, 100, 100, 0.2));\n        //background-color:   $white;\n        .sg-layout-header {\n            min-height:     4em;\n            background:     $white;\n            margin-bottom:  $gridGutter;\n        }\n        .sg-layout-footer { \n            min-height:     5em;\n            background:     transparent;\n        }\n    }\n}\n\nbody .sg-layout-content {\n    min-height:     10em;\n    @include getRem('padding-left', $pagePaddingPalmPx);\n    @include getRem('padding-right', $pagePaddingPalmPx);\n    .grid {\n        border:         1px dashed red;\n        padding: 0.5em;\n        margin-left: 0;\n        .grid__item {\n            border:         1px dashed yellowgreen;;\n            padding: 0.5em;\n            span {\n                min-height:     5em;\n                padding: 0.5em;\n                background-color: #fafafa;\n                display:        block;\n                margin-bottom:  0.7em;\n            }\n        }\n    }\n    aside,\n    main {\n        position: relative;\n        border: 1px dotted blue;\n        padding: 0.5em;\n        &::after {\n            border-radius: 4px;\n            background-color: blue;\n            color:  white;\n            display: block;\n            position: absolute;\n            margin: 1px;\n            font-size: 11px;\n            top: -6px;\n            left: -2px;\n        }\n    }\n    main {\n        &::after {\n            content: \"main\"\n        }\n    }\n    aside {\n        &::after {\n            content: \"aside\"\n        }\n    }\n}\n\n.sg-dummy-container-2x1-fullwidth {\n    width:  100%;\n    min-height:     15em;\n    background-color: #fafafa;\n    display:        block;\n     margin-bottom:  0.7em;\n}\n\n\n"],"sourceRoot":""}